Traceback (most recent call last):
  File "/Users/mikemorris/opt/anaconda3/envs/UTCDW/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/mikemorris/opt/anaconda3/envs/UTCDW/lib/python3.9/site-packages/nbclient/client.py", line 1265, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/mikemorris/opt/anaconda3/envs/UTCDW/lib/python3.9/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
  File "/Users/mikemorris/opt/anaconda3/envs/UTCDW/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/Users/mikemorris/opt/anaconda3/envs/UTCDW/lib/python3.9/site-packages/nbclient/client.py", line 703, in async_execute
    await self.async_execute_cell(
  File "/Users/mikemorris/opt/anaconda3/envs/UTCDW/lib/python3.9/site-packages/nbclient/client.py", line 1021, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/mikemorris/opt/anaconda3/envs/UTCDW/lib/python3.9/site-packages/nbclient/client.py", line 915, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
files = []
for i in range(len(results)):
    hit = results[i].file_context().search()
    files += list(map(lambda f: {'filename': f.filename, 
                                 'opendap_url': f.opendap_url}, hit))
files = pd.DataFrame.from_dict(files)
files = files.drop_duplicates('filename')
files
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mKeyError[0m                                  Traceback (most recent call last)
File [0;32m~/opt/anaconda3/envs/UTCDW/lib/python3.9/site-packages/pyesgf/search/connection.py:268[0m, in [0;36mSearchConnection._load_available_shards[0;34m(self)[0m
[1;32m    267[0m [38;5;28;01mtry[39;00m:
[0;32m--> 268[0m     shards [38;5;241m=[39m ([43mresponse_json[49m[43m[[49m[38;5;124;43m'[39;49m[38;5;124;43mresponseHeader[39;49m[38;5;124;43m'[39;49m[43m][49m[43m[[49m[38;5;124;43m'[39;49m[38;5;124;43mparams[39;49m[38;5;124;43m'[39;49m[43m][49m[43m[[49m[38;5;124;43m'[39;49m[38;5;124;43mshards[39;49m[38;5;124;43m'[39;49m[43m][49m
[1;32m    269[0m               [38;5;241m.[39msplit([38;5;124m'[39m[38;5;124m,[39m[38;5;124m'[39m))
[1;32m    270[0m [38;5;28;01mexcept[39;00m [38;5;167;01mKeyError[39;00m:

[0;31mKeyError[0m: 'shards'

During handling of the above exception, another exception occurred:

[0;31mEsgfSearchException[0m                       Traceback (most recent call last)
Cell [0;32mIn[4], line 3[0m
[1;32m      1[0m files [38;5;241m=[39m []
[1;32m      2[0m [38;5;28;01mfor[39;00m i [38;5;129;01min[39;00m [38;5;28mrange[39m([38;5;28mlen[39m(results)):
[0;32m----> 3[0m     hit [38;5;241m=[39m [43mresults[49m[43m[[49m[43mi[49m[43m][49m[38;5;241;43m.[39;49m[43mfile_context[49m[43m([49m[43m)[49m[38;5;241m.[39msearch()
[1;32m      4[0m     files [38;5;241m+[39m[38;5;241m=[39m [38;5;28mlist[39m([38;5;28mmap[39m([38;5;28;01mlambda[39;00m f: {[38;5;124m'[39m[38;5;124mfilename[39m[38;5;124m'[39m: f[38;5;241m.[39mfilename, 
[1;32m      5[0m                                  [38;5;124m'[39m[38;5;124mopendap_url[39m[38;5;124m'[39m: f[38;5;241m.[39mopendap_url}, hit))
[1;32m      6[0m files [38;5;241m=[39m pd[38;5;241m.[39mDataFrame[38;5;241m.[39mfrom_dict(files)

File [0;32m~/opt/anaconda3/envs/UTCDW/lib/python3.9/site-packages/pyesgf/search/results.py:221[0m, in [0;36mDatasetResult.file_context[0;34m(self)[0m
[1;32m    215[0m [38;5;28;01mfrom[39;00m [38;5;21;01m.[39;00m[38;5;21;01mcontext[39;00m [38;5;28;01mimport[39;00m FileSearchContext
[1;32m    217[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mcontext[38;5;241m.[39mconnection[38;5;241m.[39mdistrib:
[1;32m    218[0m     [38;5;66;03m# If the index node is in the available shards for this connection[39;00m
[1;32m    219[0m     [38;5;66;03m# then restrict shards to that node.  Otherwise do nothing to[39;00m
[1;32m    220[0m     [38;5;66;03m# handle the case when the shard is replicated[39;00m
[0;32m--> 221[0m     available_shards [38;5;241m=[39m [38;5;28mlist[39m([38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mcontext[49m[38;5;241;43m.[39;49m[43mconnection[49m[38;5;241;43m.[39;49m[43mget_shard_list[49m[43m([49m[43m)[49m[38;5;241m.[39mkeys())
[1;32m    222[0m     [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mindex_node [38;5;129;01min[39;00m available_shards:
[1;32m    223[0m         shards [38;5;241m=[39m [[38;5;28mself[39m[38;5;241m.[39mindex_node]

File [0;32m~/opt/anaconda3/envs/UTCDW/lib/python3.9/site-packages/pyesgf/search/connection.py:304[0m, in [0;36mSearchConnection.get_shard_list[0;34m(self)[0m
[1;32m    292[0m [38;5;250m[39m[38;5;124;03m"""[39;00m
[1;32m    293[0m [38;5;124;03mreturn the list of all available shards.  A subset of the returned list[39;00m
[1;32m    294[0m [38;5;124;03mcan be supplied to 'send_query()' to limit the query to selected[39;00m
[0;32m   (...)[0m
[1;32m    301[0m 
[1;32m    302[0m [38;5;124;03m"""[39;00m
[1;32m    303[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_available_shards [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m--> 304[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_load_available_shards[49m[43m([49m[43m)[49m
[1;32m    306[0m [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_available_shards

File [0;32m~/opt/anaconda3/envs/UTCDW/lib/python3.9/site-packages/pyesgf/search/connection.py:273[0m, in [0;36mSearchConnection._load_available_shards[0;34m(self)[0m
[1;32m    271[0m     log[38;5;241m.[39mdebug([38;5;124m'[39m[38;5;124m_load_available_shards() fails with this exception[39m[38;5;124m'[39m)
[1;32m    272[0m     log[38;5;241m.[39mdebug([38;5;124m'[39m[38;5;124mresponse_json = [39m[38;5;132;01m%s[39;00m[38;5;124m'[39m [38;5;241m%[39m response_json)
[0;32m--> 273[0m     [38;5;28;01mraise[39;00m EsgfSearchException([38;5;124m'[39m[38;5;124mError loading available shards[39m[38;5;124m'[39m)
[1;32m    275[0m [38;5;66;03m# Extract hostname and port from each shard.[39;00m
[1;32m    276[0m [38;5;28;01mfor[39;00m shard [38;5;129;01min[39;00m shards:

[0;31mEsgfSearchException[0m: Error loading available shards
EsgfSearchException: Error loading available shards

