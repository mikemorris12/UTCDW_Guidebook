Traceback (most recent call last):
  File "/Users/mikemorris/opt/anaconda3/envs/UTCDW/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/mikemorris/opt/anaconda3/envs/UTCDW/lib/python3.9/site-packages/nbclient/client.py", line 1265, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/mikemorris/opt/anaconda3/envs/UTCDW/lib/python3.9/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
  File "/Users/mikemorris/opt/anaconda3/envs/UTCDW/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/Users/mikemorris/opt/anaconda3/envs/UTCDW/lib/python3.9/site-packages/nbclient/client.py", line 703, in async_execute
    await self.async_execute_cell(
  File "/Users/mikemorris/opt/anaconda3/envs/UTCDW/lib/python3.9/site-packages/nbclient/client.py", line 1021, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/mikemorris/opt/anaconda3/envs/UTCDW/lib/python3.9/site-packages/nbclient/client.py", line 915, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# access the ERA5 data through the OPenDAP server
era5_ds = xr.open_dataset(cat.datasets[0].access_urls["OPENDAP"])

# lat and lon for Vancouver
lat_vcr = 49.28
lon_vcr = -123.12

# size of domain
dlat = 2.5
dlon = 2.5

# extract tasmax data for the selected region - 5x5 degrees centred at Vancouver
tasmax_era5 = era5_ds.tasmax.sel(lat = slice(lat_vcr - dlat, lat_vcr + dlat),
                                 lon = slice(lon_vcr - dlon, lon_vcr + dlon))

# select 30-year period for climatology 
yrmin = 1992
yrmax = 2021
year_range = range(yrmin, yrmax + 1)
tasmax_era5 = tasmax_era5.sel(time = tasmax_era5.time.dt.year.isin(year_range))

# chunk for automatic parallelization with dask
tasmax_era5 = tasmax_era5.chunk('auto')

# convert from Kelvin to Celsius to match the observations
tasmax_era5 = tasmax_era5 - 273.15

------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mKeyError[0m                                  Traceback (most recent call last)
Cell [0;32mIn[4], line 13[0m
[1;32m     10[0m dlon [38;5;241m=[39m [38;5;241m2.5[39m
[1;32m     12[0m [38;5;66;03m# extract tasmax data for the selected region - 5x5 degrees centred at Vancouver[39;00m
[0;32m---> 13[0m tasmax_era5 [38;5;241m=[39m [43mera5_ds[49m[38;5;241;43m.[39;49m[43mtasmax[49m[38;5;241;43m.[39;49m[43msel[49m[43m([49m[43mlat[49m[43m [49m[38;5;241;43m=[39;49m[43m [49m[38;5;28;43mslice[39;49m[43m([49m[43mlat_vcr[49m[43m [49m[38;5;241;43m-[39;49m[43m [49m[43mdlat[49m[43m,[49m[43m [49m[43mlat_vcr[49m[43m [49m[38;5;241;43m+[39;49m[43m [49m[43mdlat[49m[43m)[49m[43m,[49m
[1;32m     14[0m [43m                                 [49m[43mlon[49m[43m [49m[38;5;241;43m=[39;49m[43m [49m[38;5;28;43mslice[39;49m[43m([49m[43mlon_vcr[49m[43m [49m[38;5;241;43m-[39;49m[43m [49m[43mdlon[49m[43m,[49m[43m [49m[43mlon_vcr[49m[43m [49m[38;5;241;43m+[39;49m[43m [49m[43mdlon[49m[43m)[49m[43m)[49m
[1;32m     16[0m [38;5;66;03m# select 30-year period for climatology [39;00m
[1;32m     17[0m yrmin [38;5;241m=[39m [38;5;241m1992[39m

File [0;32m~/opt/anaconda3/envs/UTCDW/lib/python3.9/site-packages/xarray/core/dataarray.py:1510[0m, in [0;36mDataArray.sel[0;34m(self, indexers, method, tolerance, drop, **indexers_kwargs)[0m
[1;32m   1400[0m [38;5;28;01mdef[39;00m [38;5;21msel[39m(
[1;32m   1401[0m     [38;5;28mself[39m: T_DataArray,
[1;32m   1402[0m     indexers: Mapping[Any, Any] [38;5;241m=[39m [38;5;28;01mNone[39;00m,
[0;32m   (...)[0m
[1;32m   1406[0m     [38;5;241m*[39m[38;5;241m*[39mindexers_kwargs: Any,
[1;32m   1407[0m ) [38;5;241m-[39m[38;5;241m>[39m T_DataArray:
[1;32m   1408[0m [38;5;250m    [39m[38;5;124;03m"""Return a new DataArray whose data is given by selecting index[39;00m
[1;32m   1409[0m [38;5;124;03m    labels along the specified dimension(s).[39;00m
[1;32m   1410[0m 
[0;32m   (...)[0m
[1;32m   1508[0m [38;5;124;03m    Dimensions without coordinates: points[39;00m
[1;32m   1509[0m [38;5;124;03m    """[39;00m
[0;32m-> 1510[0m     ds [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_to_temp_dataset[49m[43m([49m[43m)[49m[38;5;241;43m.[39;49m[43msel[49m[43m([49m
[1;32m   1511[0m [43m        [49m[43mindexers[49m[38;5;241;43m=[39;49m[43mindexers[49m[43m,[49m
[1;32m   1512[0m [43m        [49m[43mdrop[49m[38;5;241;43m=[39;49m[43mdrop[49m[43m,[49m
[1;32m   1513[0m [43m        [49m[43mmethod[49m[38;5;241;43m=[39;49m[43mmethod[49m[43m,[49m
[1;32m   1514[0m [43m        [49m[43mtolerance[49m[38;5;241;43m=[39;49m[43mtolerance[49m[43m,[49m
[1;32m   1515[0m [43m        [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mindexers_kwargs[49m[43m,[49m
[1;32m   1516[0m [43m    [49m[43m)[49m
[1;32m   1517[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_from_temp_dataset(ds)

File [0;32m~/opt/anaconda3/envs/UTCDW/lib/python3.9/site-packages/xarray/core/dataset.py:2541[0m, in [0;36mDataset.sel[0;34m(self, indexers, method, tolerance, drop, **indexers_kwargs)[0m
[1;32m   2480[0m [38;5;250m[39m[38;5;124;03m"""Returns a new dataset with each array indexed by tick labels[39;00m
[1;32m   2481[0m [38;5;124;03malong the specified dimension(s).[39;00m
[1;32m   2482[0m 
[0;32m   (...)[0m
[1;32m   2538[0m [38;5;124;03mDataArray.sel[39;00m
[1;32m   2539[0m [38;5;124;03m"""[39;00m
[1;32m   2540[0m indexers [38;5;241m=[39m either_dict_or_kwargs(indexers, indexers_kwargs, [38;5;124m"[39m[38;5;124msel[39m[38;5;124m"[39m)
[0;32m-> 2541[0m query_results [38;5;241m=[39m [43mmap_index_queries[49m[43m([49m
[1;32m   2542[0m [43m    [49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43mindexers[49m[38;5;241;43m=[39;49m[43mindexers[49m[43m,[49m[43m [49m[43mmethod[49m[38;5;241;43m=[39;49m[43mmethod[49m[43m,[49m[43m [49m[43mtolerance[49m[38;5;241;43m=[39;49m[43mtolerance[49m
[1;32m   2543[0m [43m[49m[43m)[49m
[1;32m   2545[0m [38;5;28;01mif[39;00m drop:
[1;32m   2546[0m     no_scalar_variables [38;5;241m=[39m {}

File [0;32m~/opt/anaconda3/envs/UTCDW/lib/python3.9/site-packages/xarray/core/indexing.py:175[0m, in [0;36mmap_index_queries[0;34m(obj, indexers, method, tolerance, **indexers_kwargs)[0m
[1;32m    172[0m     options [38;5;241m=[39m {[38;5;124m"[39m[38;5;124mmethod[39m[38;5;124m"[39m: method, [38;5;124m"[39m[38;5;124mtolerance[39m[38;5;124m"[39m: tolerance}
[1;32m    174[0m indexers [38;5;241m=[39m either_dict_or_kwargs(indexers, indexers_kwargs, [38;5;124m"[39m[38;5;124mmap_index_queries[39m[38;5;124m"[39m)
[0;32m--> 175[0m grouped_indexers [38;5;241m=[39m [43mgroup_indexers_by_index[49m[43m([49m[43mobj[49m[43m,[49m[43m [49m[43mindexers[49m[43m,[49m[43m [49m[43moptions[49m[43m)[49m
[1;32m    177[0m results [38;5;241m=[39m []
[1;32m    178[0m [38;5;28;01mfor[39;00m index, labels [38;5;129;01min[39;00m grouped_indexers:

File [0;32m~/opt/anaconda3/envs/UTCDW/lib/python3.9/site-packages/xarray/core/indexing.py:137[0m, in [0;36mgroup_indexers_by_index[0;34m(obj, indexers, options)[0m
[1;32m    135[0m     grouped_indexers[index_id][key] [38;5;241m=[39m label
[1;32m    136[0m [38;5;28;01melif[39;00m key [38;5;129;01min[39;00m obj[38;5;241m.[39mcoords:
[0;32m--> 137[0m     [38;5;28;01mraise[39;00m [38;5;167;01mKeyError[39;00m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mno index found for coordinate [39m[38;5;132;01m{[39;00mkey[38;5;132;01m!r}[39;00m[38;5;124m"[39m)
[1;32m    138[0m [38;5;28;01melif[39;00m key [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m obj[38;5;241m.[39mdims:
[1;32m    139[0m     [38;5;28;01mraise[39;00m [38;5;167;01mKeyError[39;00m([38;5;124mf[39m[38;5;124m"[39m[38;5;132;01m{[39;00mkey[38;5;132;01m!r}[39;00m[38;5;124m is not a valid dimension or coordinate[39m[38;5;124m"[39m)

[0;31mKeyError[0m: "no index found for coordinate 'lat'"
KeyError: "no index found for coordinate 'lat'"

